import { Entity, PrimaryGeneratedColumn, Column, ManyToOne, OneToMany, CreateDateColumn, JoinColumn } from 'typeorm';
import { Patient } from '../../patients/entities/patient.entity';
import { User } from '../../users/entities/user.entity';
import { PrescriptionMedication } from './prescription-medication.entity';

/**
 * Enum que define os possíveis status de uma prescrição médica.
 * 
 * @enum {string}
 */
export enum PrescriptionStatus {
  /** Rascunho - prescrição ainda não finalizada */
  DRAFT = 'draft',
  /** Ativa - prescrição em uso pelo paciente */
  ACTIVE = 'active',
  /** Suspensa - prescrição temporariamente pausada */
  SUSPENDED = 'suspended',
  /** Concluída - prescrição finalizada */
  COMPLETED = 'completed',
}

/**
 * Entidade que representa uma prescrição médica no sistema.
 * 
 * Uma prescrição é um documento médico que contém medicamentos prescritos
 * para um paciente específico por um médico autorizado. Cada prescrição
 * pode conter múltiplos medicamentos e possui um status que indica seu
 * estado atual no processo de tratamento.
 * 
 * @class Prescription
 * @entity prescriptions
 */
@Entity('prescriptions')
export class Prescription {
  /**
   * Identificador único da prescrição.
   * Gerado automaticamente como UUID.
   * 
   * @type {string}
   * @primaryKey
   */
  @PrimaryGeneratedColumn('uuid')
  id: string;

  /**
   * Paciente para quem a prescrição foi emitida.
   * Relacionamento obrigatório - prescrição deve estar vinculada a um paciente.
   * 
   * @type {Patient}
   * @relation ManyToOne
   * @cascade DELETE - se paciente for removido, prescrições são removidas
   */
  @ManyToOne(() => Patient, { onDelete: 'CASCADE', nullable: false })
  @JoinColumn({ name: 'patient_id' })
  patient: Patient;

  /**
   * Médico responsável pela prescrição.
   * Relacionamento obrigatório - prescrição deve estar vinculada a um usuário/médico.
   * 
   * @type {User}
   * @relation ManyToOne
   * @cascade DELETE - se usuário for removido, prescrições são removidas
   */
  @ManyToOne(() => User, { onDelete: 'CASCADE', nullable: false })
  @JoinColumn({ name: 'user_id' })
  user: User;

  /**
   * Status atual da prescrição.
   * Define o estado da prescrição no fluxo de tratamento.
   * 
   * @type {PrescriptionStatus}
   * @enum DRAFT, ACTIVE, SUSPENDED, COMPLETED
   */
  @Column({ type: 'enum', enum: PrescriptionStatus })
  status: PrescriptionStatus;

  /**
   * Observações adicionais sobre a prescrição.
   * Campo opcional para notas do médico sobre o tratamento.
   * 
   * @type {string | null}
   * @nullable
   */
  @Column({ type: 'text', nullable: true })
  notes: string | null;

  /**
   * Data e hora de criação da prescrição.
   * Preenchida automaticamente no momento da criação.
   * 
   * @type {Date}
   * @autoGenerated
   */
  @CreateDateColumn({ name: 'created_at' })
  createdAt: Date;

  /**
   * Lista de medicamentos prescritos nesta prescrição.
   * Relacionamento um-para-muitos com PrescriptionMedication.
   * 
   * @type {PrescriptionMedication[]}
   * @relation OneToMany
   * @cascade true - medicamentos são criados/atualizados/removidos junto com a prescrição
   */
  @OneToMany(() => PrescriptionMedication, (medication) => medication.prescription, { cascade: true })
  medications: PrescriptionMedication[];
}


